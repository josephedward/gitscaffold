name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    concurrency:
      # Use workflow name + normalized ref to avoid cross-workflow blocking
      group: ci-${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
      cancel-in-progress: true

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install .[test]
        pip install ruff black pytest-xdist

    - name: Run Linting and Formatting checks
      run: |
        ruff check .
        black --check .

    - name: Set up Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          rust/mdparser/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('rust/mdparser/Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build mdparser
      run: cargo build --release --manifest-path rust/mdparser/Cargo.toml

    - name: Add mdparser to PATH
      run: echo "$(pwd)/rust/mdparser/target/release" >> $GITHUB_PATH

    - name: Run tests
      run: pytest -v -s --disable-warnings --workers=1 --max-worker-restart=0 -n auto
