name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  # Also allow manual dispatch of this workflow
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Fetch full history including tags for version checks and changelogs
          fetch-depth: 0
          # Persist GitHub token for pushing tags/releases if needed
          persist-credentials: true

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build tools
        run: pip install --upgrade build twine

      - name: Build distribution
        run: python -m build --sdist --wheel --no-isolation

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.13.0
        with:
          # Use the API token secret for authentication
          pypi_token: ${{ secrets.PYPI_API_TOKEN }}

      - name: Extract release notes
        id: extract_release_notes
        run: |
          # Extracts content for the release note. It looks for a heading with the git tag,
          # and captures everything until the next heading.
          # GITHUB_REF_NAME is the tag that triggered the workflow (e.g. v1.2.3)
          awk '/^## / {if(p) exit; if($2 == "${{ github.ref_name }}") p=1; next} p' docs/release.md > release_notes.md

      - name: Create GitHub Release
        if: ${{ !env.ACT }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body_path: release_notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
